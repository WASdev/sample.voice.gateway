[{"id":"a0880910.a3f8b","type":"tab","label":"Flow 9"},{"id":"a725f605.c835a","type":"debug","z":"a0880910.a3f8b","name":"Message In","active":true,"console":"false","complete":"payload","x":435,"y":67.5,"wires":[]},{"id":"8db22bf0.9183b8","type":"function","z":"a0880910.a3f8b","name":"Handle VGW Request","func":"if (typeof msg.payload.context !== 'undefined'){\n    msg.params = {};\n    msg.params.context = msg.payload.context;\n    \n    //  This gives the caller a bit more time to respond to the question\n    msg.params.context.vgwPostResponseTimeoutCount = 10000;\n}\n\nif (typeof msg.payload.input !== 'undefined' && typeof msg.payload.input.text !== 'undefined')\n   msg.payload = msg.payload.input.text;\nelse\n   msg.payload = \"hello\";\n\n//  The node-red conversation node requires some input. Empty strings don't work.\nif (msg.payload == \"\")\n    msg.payload = \"hello\";\n\n\nreturn msg;","outputs":"1","noerr":0,"x":225.50003051757812,"y":200.25,"wires":[["5023c445.a88a44"]]},{"id":"e7f513ca.403b3","type":"http in","z":"a0880910.a3f8b","name":"","url":"weather/v1/workspaces/*","method":"post","upload":false,"swaggerDoc":"","x":159.25,"y":112,"wires":[["a725f605.c835a","8db22bf0.9183b8"]]},{"id":"5023c445.a88a44","type":"watson-conversation-v1","z":"a0880910.a3f8b","name":"","workspaceid":"40b2e696-fe4e-4db9-8237-c5949def1e77","multiuser":false,"context":false,"default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/conversation/api","x":272.2499694824219,"y":274.7499694824219,"wires":[["6098749f.08bcdc"]]},{"id":"6098749f.08bcdc","type":"function","z":"a0880910.a3f8b","name":"Geo Lookup","func":"// This function converts the city and state to\n// a longitude and latitude.\n\nvar response = null;\nvar geoLocRequest = null;\n\n//  First check to see if City or State have been captured\n//  If so, save then in the VGW payload context so that they\n//  will be returned on the next Conversation turn.\nif (typeof msg.payload.context.status !== 'undefined' &&\n            msg.payload.context.status == \"gotCity\"){\n    msg.payload.context.city = msg.payload.input.text.trim();\n    delete msg.payload.context.status;\n}\nelse if (typeof msg.payload.context.status !== 'undefined' &&\n            msg.payload.context.status == \"gotState\"){\n    msg.payload.context.state = msg.payload.input.text.trim();\n    delete msg.payload.context.status;\n}\n\n// Now, if the message contains {daily forecast} execute the\n// weather forecast path.\nif (msg.payload.output.text[0].includes(\"{daily forecast}\") === true){\n\n    if (typeof msg.payload.context.city !== 'undefined' &&\n        typeof msg.payload.context.state !== 'undefined'){\n\n        geoLocRequest = msg;\n    \n        //  Now build the URL needed to collect the longitude and latitude \n        geoLocRequest.vgwPayload = msg.payload;\n        geoLocRequest.url = \"https://<username>:<password>@twcservice.mybluemix.net:443/api/weather/v3/location/search?query=\" +  \n                                msg.payload.context.city +\n                                \"&locationType=city&countryCode=US&language=en-US\";\n        geoLocRequest.payload = null;\n    }\n    else{\n        response = msg;\n        response.payload.output[0] = \"Internal error, no city or state found\";\n    }\n}\nelse{\n    response = msg; \n}\n\nreturn [response, geoLocRequest];","outputs":"2","noerr":0,"x":329.5,"y":345,"wires":[["de391ae6.e98b78","7cb50129.c3358"],["bf132083.5205f"]]},{"id":"aeffaa2b.22cfb","type":"weather_insights","z":"a0880910.a3f8b","name":"","host":"twcservice.mybluemix.net","service":"/forecast/daily/10day.json","geocode":"","units":"e","language":"","x":647.5,"y":571.25,"wires":[["e560e62c.ca3dc"]]},{"id":"7cb50129.c3358","type":"http response","z":"a0880910.a3f8b","name":"","statusCode":"","headers":{},"x":1113.75,"y":323.75,"wires":[]},{"id":"e560e62c.ca3dc","type":"function","z":"a0880910.a3f8b","name":"Prep for response","func":"\nmsg.payload = msg.vgwPayload;\n\nif (typeof msg.forecasts !== 'undefined'){\n    \n   msg.payload.output.text[0] = msg.payload.output.text[0].replace(\"{daily forecast}\",msg.forecasts[0].narrative); \n    \n}\nelse{\n    msg.payload.output.text[0] = \"Error getting daily forecast\";\n}\n\nreturn msg;","outputs":"1","noerr":0,"x":758.75,"y":645,"wires":[["7cb50129.c3358","3250dbaf.e983e4"]]},{"id":"de391ae6.e98b78","type":"debug","z":"a0880910.a3f8b","name":"Response to VGW 1","active":true,"console":"false","complete":"true","x":557.5,"y":251.25,"wires":[]},{"id":"f037de39.437d68","type":"function","z":"a0880910.a3f8b","name":"Prep for Weather","func":"var response = null;\nvar weatherReq = null;\n\ndelete msg.url;\n\n//  Extract the coordinates \nif (typeof msg.payload.location !== 'undefined'){\n    \n    var longitude = null;\n    var latitude = null;\n    var adminDistrict = msg.payload.location.adminDistrict;\n    for (i = 0; i < adminDistrict.length; i++){\n        if (adminDistrict[i] === msg.vgwPayload.context.state){\n            longitude = msg.payload.location.longitude[i];\n            latitude = msg.payload.location.latitude[i];\n            break;\n        }\n    }\n    \n    if (longitude !== null && latitude !== null){\n        location = latitude + \",\" + longitude;\n        msg.payload = location;\n        weatherReq = msg;\n    }\n    else{\n        response = msg;\n        response.payload = msg.vgwPayload;\n        response.payload.output.text[0] = \"No Geo location found for \"+ msg.vgwPayload.context.city + \" in \" + msg.vgwPayload.context.state;\n    }    \n}\nelse{\n    response = msg;\n    response.payload = msg.vgwPayload;\n    response.payload.output.text[0] = \"Error looking up geo location occured.\";\n}\n\nreturn [response, weatherReq];","outputs":"2","noerr":0,"x":538.75,"y":500.9375,"wires":[["7cb50129.c3358","32e67c64.d18254"],["aeffaa2b.22cfb"]]},{"id":"bf132083.5205f","type":"http request","z":"a0880910.a3f8b","name":"","method":"GET","ret":"obj","url":"","tls":"","x":431.25,"y":429.6875,"wires":[["f037de39.437d68"]]},{"id":"3250dbaf.e983e4","type":"debug","z":"a0880910.a3f8b","name":"Response to VGW 3","active":true,"console":"false","complete":"true","x":1016.25,"y":645,"wires":[]},{"id":"32e67c64.d18254","type":"debug","z":"a0880910.a3f8b","name":"Response to VGW 2","active":true,"console":"false","complete":"true","x":693.75,"y":383.75,"wires":[]}]